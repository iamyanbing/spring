server:
  port: 9994

spring:
  application:
    name: cloud-gateway
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      # 路由集合（数组）：指当请求满足什么样的断言时，转发到哪个服务上
      routes:
        # 路由标识，要求唯一，名称任意
        - id: boot
          # 路由的目标地址。请求最终被转发到的目标地址
          uri: http://localhost:9999
          # 设置断言
          predicates:
            # Path Route Predicate Factory 断言，满足 /boot/** 路径的请求都会被路由到 http://localhost:9999 这个uri中
            - Path=/boot/**
          # 配置过滤器（局部）
          filters:
            # StripPrefix：去除原始请求路径中的前1级路径，即/boot
            # 浏览器访问： http://localhost:9994/boot/hello/yanbing ，
            # 不配置 StripPrefix=1，boot 服务接收到的请求：http://localhost:9999/boot/hello/yanbing
            # 配置 StripPrefix=1，boot 服务接收到的请求：http://localhost:9999/hello/yanbing
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                # 限流维度的实现类
                key-resolver: '#{@rateComponet}'
                # 指定了每秒钟生成的令牌数（令牌桶算法）
                redis-rate-limiter.replenishRate: 1
                # 指定了令牌桶的容量（令牌桶算法）
                redis-rate-limiter.burstCapacity: 3

        - id: security
          uri: http://localhost:9996
          # 设置断言
          predicates:
            - Path=/security/**
          # 配置过滤器（局部）
          filters:
            # StripPrefix：去除原始请求路径中的前1级路径，即/security
            - StripPrefix=1

# 配置不需要认证的路径
path-interceptor:
  excludePathPatterns:
    - /boot/users/**
    - /security/user/login
    - /security/code/image
    - /security/captchaImage

